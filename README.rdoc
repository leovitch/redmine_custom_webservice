Custom_Webservice
=================
This plugin is a simple example of how to provide custom web services for your Redmine.
By starting from this template, you can write only a few lines of Ruby code
and add powerful query or update functions to your Redmine.

As the Redmine REST API becomes more complete, this will 
hopefully be less necessary, but for now there are many 
missing functions in the REST API and the state of implementation
varies from Redmine release to release, so we found it
more useful to put the code our external tools rely on in
our own plugin that can be stable across releases and versions.  

That said, almost everything you would do with this plugin
(with the possible exception of some query stuff) will eventually 
mostly migrate to using the REST API.  In the meantime, enjoy.

Example
=======

This plugin installs normally:
# cd vendors/plugins in your Redmine install.  A test install is recommended!
# git clone git://github.com/leovitch/custom_webservice.git
# Run or restart Redmine
#* The examples in the code all assume you're testing under Mongrel by using this command at the root.
#* RAILS_ENV=production ruby script/server
# Go to the Administration > Settings > Authentication page and make sure the box "Enable REST Web Service" is on.
# For testing, log in as the admin user, go to the "My Account" page, and copy the API key.  You'll need it for testing.
# Now you can test the samples from the shell using curl (or wget).  See the class documentation for CustomWebserviceController.
# Once you see how the samples work, delete those actions and make some useful new actions of your own.
#* You'll probably find custom_webservice/app/controllers/custom_webservice_controller.rb is the only file you need to modify.
# If you deploy web services based on this plugin, here are a couple points to be aware of.
## Be sure to delete the non-authenticated actions at the top of the controller.  They're only there to help you understand and try out some simple actions.
## For a non-admin user to use these web services, they must have the "Access Custom Web Services" permission.
##* You'll probably want to create a new Role called Robots or some such, that has only the needed permissions for your application.
##* Most of the Redmine ActiveRecord classes (Issue, Project, etc.) do enforce the permission bits, so be sure to give your Robot role all the appropriate permissions like "add issue", "edit issue", and so on.
## In general, to avoid POST forgeries, API keys are only secure if used over https or on a totally trusted LAN segment.


Copyright (c) 2011 Leo Hourvitz, released under the MIT license

